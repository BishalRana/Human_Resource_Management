// <auto-generated />
using Human_Resource_Management.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Human_Resource_Management.Migrations
{
    [DbContext(typeof(ManagementContext))]
    [Migration("20180720203802_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Human_Resource_Management.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Employee_EmpId");

                    b.Property<string>("Location");

                    b.HasKey("Id");

                    b.HasIndex("Employee_EmpId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Chief_Executive_Officer")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("Registered_Date");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Employee", b =>
                {
                    b.Property<int>("_EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<DateTime>("Joined_Date");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("PositionsId")
                        .IsRequired();

                    b.Property<decimal>("Salary");

                    b.Property<int?>("SubCompanyId")
                        .IsRequired();

                    b.HasKey("_EmpId");

                    b.HasIndex("PositionsId");

                    b.HasIndex("SubCompanyId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.EmployeeProject", b =>
                {
                    b.Property<int>("_EmpId");

                    b.Property<int>("_PjtId");

                    b.Property<int>("Id");

                    b.HasKey("_EmpId", "_PjtId");

                    b.HasIndex("_PjtId");

                    b.ToTable("EmployeeProject");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Employee_EmpId");

                    b.Property<string>("Phone_Number");

                    b.HasKey("Id");

                    b.HasIndex("Employee_EmpId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Position_Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Project", b =>
                {
                    b.Property<int>("_PjtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("SubCompanyId")
                        .IsRequired();

                    b.HasKey("_PjtId");

                    b.HasIndex("SubCompanyId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.SubCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Chief_Executive_Officer")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int?>("CompanyId")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("Registered_Date");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("SubCompany");
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Address", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.Employee", "Employee")
                        .WithMany("Addresses")
                        .HasForeignKey("Employee_EmpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Employee", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.Position", "Positions")
                        .WithMany("Employees")
                        .HasForeignKey("PositionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Human_Resource_Management.Models.SubCompany", "SubCompany")
                        .WithMany("Employees")
                        .HasForeignKey("SubCompanyId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Human_Resource_Management.Models.EmployeeProject", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.Employee", "employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("_EmpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Human_Resource_Management.Models.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("_PjtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Phone", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.Employee", "Employee")
                        .WithMany("Phones")
                        .HasForeignKey("Employee_EmpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Human_Resource_Management.Models.Project", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.SubCompany", "SubCompany")
                        .WithMany("Projects")
                        .HasForeignKey("SubCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Human_Resource_Management.Models.SubCompany", b =>
                {
                    b.HasOne("Human_Resource_Management.Models.Company", "Company")
                        .WithMany("SubCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
